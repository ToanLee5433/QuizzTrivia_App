#!/usr/bin/env node

/**
 * üîß Add ALL missing translation keys v·ªõi b·∫£n d·ªãch ƒë·∫ßy ƒë·ªß
 * Includes: common, auth, quiz, categories, multiplayer, profile, etc.
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const rootDir = path.resolve(__dirname, '..');

const LOCALES_DIR = path.join(rootDir, 'public', 'locales');

// Comprehensive translations for ALL missing keys
const allTranslations = {
  vi: {
    // Common
    common: {
      selectLanguage: "Ch·ªçn ng√¥n ng·ªØ",
      back: "Quay l·∫°i",
      createdAt: "Ng√†y t·∫°o",
      actions: "H√†nh ƒë·ªông",
      cancel: "H·ªßy",
      points: "ƒêi·ªÉm",
      correct: "ƒê√∫ng",
      loading: "ƒêang t·∫£i...",
      you: "B·∫°n",
      online: "Tr·ª±c tuy·∫øn",
      offline: "Ngo·∫°i tuy·∫øn",
      start: "B·∫Øt ƒë·∫ßu",
      messages: "Tin nh·∫Øn",
      submit: "G·ª≠i",
      rank: "X·∫øp h·∫°ng",
      accuracy: "ƒê·ªô ch√≠nh x√°c",
      avgTime: "Th·ªùi gian TB",
      recommended: "ƒê·ªÅ xu·∫•t",
      connecting: "ƒêang k·∫øt n·ªëi...",
      all: "T·∫•t c·∫£"
    },

    // Auth
    auth: {
      logout: "ƒêƒÉng xu·∫•t",
      validation: {
        emailRequired: "Email l√† b·∫Øt bu·ªôc",
        emailInvalid: "Email kh√¥ng h·ª£p l·ªá",
        passwordRequired: "M·∫≠t kh·∫©u l√† b·∫Øt bu·ªôc",
        displayNameRequired: "T√™n hi·ªÉn th·ªã l√† b·∫Øt bu·ªôc",
        passwordMismatch: "M·∫≠t kh·∫©u kh√¥ng kh·ªõp",
        passwordTooShort: "M·∫≠t kh·∫©u qu√° ng·∫Øn (t·ªëi thi·ªÉu 6 k√Ω t·ª±)",
        termsRequired: "B·∫°n ph·∫£i ƒë·ªìng √Ω v·ªõi ƒëi·ªÅu kho·∫£n"
      },
      errors: {
        emailAlreadyInUse: "Email ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng",
        weakPassword: "M·∫≠t kh·∫©u qu√° y·∫øu",
        registerError: "L·ªói ƒëƒÉng k√Ω",
        googleLoginError: "L·ªói ƒëƒÉng nh·∫≠p Google",
        loginError: "L·ªói ƒëƒÉng nh·∫≠p"
      }
    },

    // Quiz
    quiz: {
      reviews: {
        reviewQuiz: "ƒê√°nh gi√° Quiz"
      },
      questionsCount: "c√¢u h·ªèi",
      timeLimit: "Th·ªùi gian",
      ratingCount: "ƒë√°nh gi√°",
      type: "Lo·∫°i",
      points: "ƒêi·ªÉm",
      moreQuestions: "Th√™m c√¢u h·ªèi",
      stats: {
        totalQuizzes: "T·ªïng s·ªë Quiz",
        totalViews: "T·ªïng l∆∞·ª£t xem",
        totalAttempts: "T·ªïng l∆∞·ª£t th·ª≠",
        views: "L∆∞·ª£t xem",
        attempts: "L∆∞·ª£t th·ª≠",
        completions: "Ho√†n th√†nh"
      },
      boolean: {
        true: "ƒê√∫ng"
      },
      enterAnswer: "Nh·∫≠p c√¢u tr·∫£ l·ªùi",
      unsupportedType: "Lo·∫°i c√¢u h·ªèi kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£",
      questionTypes: {
        image: "H√¨nh ·∫£nh",
        checkbox: "Nhi·ªÅu l·ª±a ch·ªçn"
      },
      selectedQuiz: "Quiz ƒë√£ ch·ªçn",
      untitled: "Ch∆∞a ƒë·∫∑t t√™n",
      deleteError: "L·ªói khi x√≥a",
      confirmDelete: "X√°c nh·∫≠n x√≥a?",
      explanation: "Gi·∫£i th√≠ch"
    },

    // Quiz List
    quizList: {
      exploreQuizzes: "Kh√°m ph√° Quiz",
      title: "Danh s√°ch Quiz",
      results: {
        quizzes: "quiz"
      },
      empty: {
        noQuizFound: "Kh√¥ng t√¨m th·∫•y quiz n√†o",
        clearFilters: "X√≥a b·ªô l·ªçc"
      },
      filters: {
        allCategories: "T·∫•t c·∫£ ch·ªß ƒë·ªÅ",
        allDifficulties: "T·∫•t c·∫£ ƒë·ªô kh√≥"
      },
      sort: {
        newest: "M·ªõi nh·∫•t",
        oldest: "C≈© nh·∫•t",
        difficulty: "ƒê·ªô kh√≥"
      },
      options: {
        showCompleted: "Hi·ªán quiz ƒë√£ ho√†n th√†nh"
      }
    },

    // Categories
    categories: {
      colors: {
        blue: "Xanh d∆∞∆°ng",
        green: "Xanh l√°",
        purple: "T√≠m",
        red: "ƒê·ªè",
        yellow: "V√†ng",
        pink: "H·ªìng",
        indigo: "Ch√†m",
        gray: "X√°m"
      },
      loadError: "L·ªói t·∫£i ch·ªß ƒë·ªÅ",
      enterName: "Nh·∫≠p t√™n ch·ªß ƒë·ªÅ",
      updateSuccess: "C·∫≠p nh·∫≠t ch·ªß ƒë·ªÅ th√†nh c√¥ng",
      addSuccess: "Th√™m ch·ªß ƒë·ªÅ th√†nh c√¥ng",
      saveError: "L·ªói l∆∞u ch·ªß ƒë·ªÅ",
      confirmDeleteName: "X√°c nh·∫≠n x√≥a ch·ªß ƒë·ªÅ",
      deleteSuccess: "X√≥a ch·ªß ƒë·ªÅ th√†nh c√¥ng",
      deleteError: "L·ªói x√≥a ch·ªß ƒë·ªÅ",
      add: "Th√™m ch·ªß ƒë·ªÅ",
      total: "T·ªïng",
      withQuizzes: "c√≥ quiz",
      totalQuizzes: "T·ªïng s·ªë quiz",
      empty: "Tr·ªëng",
      searchPlaceholder: "T√¨m ki·∫øm ch·ªß ƒë·ªÅ...",
      noCategories: "Kh√¥ng c√≥ ch·ªß ƒë·ªÅ n√†o",
      noSearchMatch: "Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£",
      noneCreated: "Ch∆∞a t·∫°o ch·ªß ƒë·ªÅ n√†o",
      createFirst: "T·∫°o ch·ªß ƒë·ªÅ ƒë·∫ßu ti√™n",
      quizSuffix: "quiz",
      createdAtLabel: "Ng√†y t·∫°o",
      editTitle: "Ch·ªânh s·ª≠a ch·ªß ƒë·ªÅ",
      addTitle: "Th√™m ch·ªß ƒë·ªÅ m·ªõi",
      name: "T√™n ch·ªß ƒë·ªÅ",
      namePlaceholder: "Nh·∫≠p t√™n ch·ªß ƒë·ªÅ",
      description: "M√¥ t·∫£",
      descriptionPlaceholder: "Nh·∫≠p m√¥ t·∫£",
      color: "M√†u s·∫Øc",
      create: "T·∫°o",
      quizCount: "S·ªë quiz",
      confirmDelete: "X√°c nh·∫≠n x√≥a ch·ªß ƒë·ªÅ n√†y?"
    },

    // Multiplayer
    multiplayer: {
      avgScore: "ƒêi·ªÉm TB",
      startingIn: "B·∫Øt ƒë·∫ßu sau",
      totalPlayers: "T·ªïng ng∆∞·ªùi ch∆°i",
      readyPlayers: "Ng∆∞·ªùi ch∆°i s·∫µn s√†ng",
      timePerQuestion: "Th·ªùi gian m·ªói c√¢u",
      waitingForPlayer: "ƒêang ƒë·ª£i ng∆∞·ªùi ch∆°i...",
      errors: {
        connectionFailed: "K·∫øt n·ªëi th·∫•t b·∫°i",
        connectionLost: "M·∫•t k·∫øt n·ªëi",
        reconnecting: "ƒêang k·∫øt n·ªëi l·∫°i...",
        createRoomFailed: "T·∫°o ph√≤ng th·∫•t b·∫°i",
        joinRoomFailed: "Tham gia ph√≤ng th·∫•t b·∫°i"
      },
      success: {
        gameStarted: "Tr√≤ ch∆°i ƒë√£ b·∫Øt ƒë·∫ßu",
        connectionRestored: "ƒê√£ kh√¥i ph·ª•c k·∫øt n·ªëi",
        roomCreated: "ƒê√£ t·∫°o ph√≤ng",
        joinedRoom: "ƒê√£ tham gia ph√≤ng",
        leftRoom: "ƒê√£ r·ªùi ph√≤ng"
      },
      chat: {
        title: "Tr√≤ chuy·ªán",
        noMessages: "Ch∆∞a c√≥ tin nh·∫Øn",
        disabled: "Chat b·ªã t·∫Øt",
        placeholder: "Nh·∫≠p tin nh·∫Øn..."
      },
      enterRoomCode: "Nh·∫≠p m√£ ph√≤ng",
      roomCodeHint: "M√£ ph√≤ng 6 k√Ω t·ª±",
      password: "M·∫≠t kh·∫©u",
      enterPassword: "Nh·∫≠p m·∫≠t kh·∫©u",
      passwordRequired: "Y√™u c·∫ßu m·∫≠t kh·∫©u",
      game: {
        gameOver: "Tr√≤ ch∆°i k·∫øt th√∫c",
        finalResults: "K·∫øt qu·∫£ cu·ªëi c√πng"
      },
      yourResult: "K·∫øt qu·∫£ c·ªßa b·∫°n",
      totalQuestions: "T·ªïng s·ªë c√¢u",
      totalTime: "T·ªïng th·ªùi gian",
      playAgain: "Ch∆°i l·∫°i",
      backToLobby: "Quay l·∫°i s·∫£nh",
      subtitle: "Ch∆°i c√πng b·∫°n b√®",
      roomName: "T√™n ph√≤ng",
      enterRoomName: "Nh·∫≠p t√™n ph√≤ng",
      maxPlayers: "S·ªë ng∆∞·ªùi t·ªëi ƒëa",
      timeLimit: "Gi·ªõi h·∫°n th·ªùi gian",
      roomSettings: "C√†i ƒë·∫∑t ph√≤ng",
      showLeaderboard: "Hi·ªán b·∫£ng x·∫øp h·∫°ng",
      private: "Ri√™ng t∆∞"
    },

    // Game Mode
    gameMode: {
      singlePlayer: "Ch∆°i ƒë∆°n",
      singlePlayerDesc: "Ch∆°i m·ªôt m√¨nh",
      noPressure: "Kh√¥ng √°p l·ª±c",
      trackProgress: "Theo d√µi ti·∫øn ƒë·ªô",
      customizable: "T√πy ch·ªânh",
      startSolo: "B·∫Øt ƒë·∫ßu ch∆°i ƒë∆°n",
      multiplayer: "Nhi·ªÅu ng∆∞·ªùi ch∆°i",
      multiplayerDesc: "Ch∆°i v·ªõi b·∫°n b√®",
      createRoom: "T·∫°o ph√≤ng",
      createRoomDesc: "T·∫°o ph√≤ng ri√™ng",
      becomeHost: "Tr·ªü th√†nh ch·ªß ph√≤ng",
      invitePlayers: "M·ªùi ng∆∞·ªùi ch∆°i",
      customizeSettings: "T√πy ch·ªânh c√†i ƒë·∫∑t"
    },

    // Profile
    profile: {
      viewAllCount: "Xem t·∫•t c·∫£",
      passwordMinLength: "M·∫≠t kh·∫©u t·ªëi thi·ªÉu 6 k√Ω t·ª±",
      displayName: "T√™n hi·ªÉn th·ªã"
    },

    // Dashboard
    dashboard: {
      welcome: "Ch√†o m·ª´ng"
    },

    // Not Found
    notFound: {
      title: "Kh√¥ng t√¨m th·∫•y trang",
      description: "Trang b·∫°n ƒëang t√¨m ki·∫øm kh√¥ng t·ªìn t·∫°i",
      backToHome: "Quay l·∫°i trang ch·ªß"
    },

    // Unauthorized
    unauthorized: {
      title: "Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p",
      description: "B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p trang n√†y",
      goHome: "V·ªÅ trang ch·ªß"
    },

    // Landing
    landing: {
      features: {
        diversity: {
          title: "ƒêa d·∫°ng ch·ªß ƒë·ªÅ",
          description: "H√†ng ngh√¨n quiz t·ª´ nhi·ªÅu lƒ©nh v·ª±c kh√°c nhau"
        },
        realtime: {
          description: "C·∫≠p nh·∫≠t k·∫øt qu·∫£ theo th·ªùi gian th·ª±c"
        },
        ranking: {
          description: "B·∫£ng x·∫øp h·∫°ng to√†n c·∫ßu"
        }
      }
    },

    // Leaderboard
    leaderboard: {
      viewAllCount: "Xem t·∫•t c·∫£"
    },

    // Status
    status: {
      label: "Tr·∫°ng th√°i"
    },

    // Nav
    nav: {
      quiz: "Quiz"
    },

    // Achievement
    achievement: {
      unlockedAt: "M·ªü kh√≥a l√∫c",
      unlocked: "ƒê√£ m·ªü kh√≥a"
    },

    // Errors
    errors: {
      unauthorized: "Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p"
    },

    // UI
    ui: {
      role: "Vai tr√≤"
    },

    // Action
    action: {
      actions: "H√†nh ƒë·ªông",
      action: "H√†nh ƒë·ªông"
    },

    // Users
    users: {
      confirmDelete: "X√°c nh·∫≠n x√≥a ng∆∞·ªùi d√πng?"
    }
  },

  en: {
    // Common
    common: {
      selectLanguage: "Select Language",
      back: "Back",
      createdAt: "Created At",
      actions: "Actions",
      cancel: "Cancel",
      points: "Points",
      correct: "Correct",
      loading: "Loading...",
      you: "You",
      online: "Online",
      offline: "Offline",
      start: "Start",
      messages: "Messages",
      submit: "Submit",
      rank: "Rank",
      accuracy: "Accuracy",
      avgTime: "Avg Time",
      recommended: "Recommended",
      connecting: "Connecting...",
      all: "All"
    },

    // Auth
    auth: {
      logout: "Logout",
      validation: {
        emailRequired: "Email is required",
        emailInvalid: "Invalid email",
        passwordRequired: "Password is required",
        displayNameRequired: "Display name is required",
        passwordMismatch: "Passwords don't match",
        passwordTooShort: "Password too short (min 6 characters)",
        termsRequired: "You must agree to terms"
      },
      errors: {
        emailAlreadyInUse: "Email already in use",
        weakPassword: "Weak password",
        registerError: "Registration error",
        googleLoginError: "Google login error",
        loginError: "Login error"
      }
    },

    // Quiz
    quiz: {
      reviews: {
        reviewQuiz: "Review Quiz"
      },
      questionsCount: "questions",
      timeLimit: "Time Limit",
      ratingCount: "ratings",
      type: "Type",
      points: "Points",
      moreQuestions: "More Questions",
      stats: {
        totalQuizzes: "Total Quizzes",
        totalViews: "Total Views",
        totalAttempts: "Total Attempts",
        views: "Views",
        attempts: "Attempts",
        completions: "Completions"
      },
      boolean: {
        true: "True"
      },
      enterAnswer: "Enter answer",
      unsupportedType: "Unsupported question type",
      questionTypes: {
        image: "Image",
        checkbox: "Multiple Choice"
      },
      selectedQuiz: "Selected Quiz",
      untitled: "Untitled",
      deleteError: "Delete error",
      confirmDelete: "Confirm delete?",
      explanation: "Explanation"
    },

    // Quiz List
    quizList: {
      exploreQuizzes: "Explore Quizzes",
      title: "Quiz List",
      results: {
        quizzes: "quizzes"
      },
      empty: {
        noQuizFound: "No quiz found",
        clearFilters: "Clear filters"
      },
      filters: {
        allCategories: "All Categories",
        allDifficulties: "All Difficulties"
      },
      sort: {
        newest: "Newest",
        oldest: "Oldest",
        difficulty: "Difficulty"
      },
      options: {
        showCompleted: "Show completed"
      }
    },

    // Categories
    categories: {
      colors: {
        blue: "Blue",
        green: "Green",
        purple: "Purple",
        red: "Red",
        yellow: "Yellow",
        pink: "Pink",
        indigo: "Indigo",
        gray: "Gray"
      },
      loadError: "Load error",
      enterName: "Enter name",
      updateSuccess: "Update successful",
      addSuccess: "Add successful",
      saveError: "Save error",
      confirmDeleteName: "Confirm delete",
      deleteSuccess: "Delete successful",
      deleteError: "Delete error",
      add: "Add Category",
      total: "Total",
      withQuizzes: "with quizzes",
      totalQuizzes: "Total Quizzes",
      empty: "Empty",
      searchPlaceholder: "Search categories...",
      noCategories: "No categories",
      noSearchMatch: "No matches found",
      noneCreated: "No categories created",
      createFirst: "Create first category",
      quizSuffix: "quizzes",
      createdAtLabel: "Created",
      editTitle: "Edit Category",
      addTitle: "Add Category",
      name: "Name",
      namePlaceholder: "Enter name",
      description: "Description",
      descriptionPlaceholder: "Enter description",
      color: "Color",
      create: "Create",
      quizCount: "Quiz Count",
      confirmDelete: "Confirm delete this category?"
    },

    // Multiplayer
    multiplayer: {
      avgScore: "Avg Score",
      startingIn: "Starting in",
      totalPlayers: "Total Players",
      readyPlayers: "Ready Players",
      timePerQuestion: "Time per Question",
      waitingForPlayer: "Waiting for players...",
      errors: {
        connectionFailed: "Connection failed",
        connectionLost: "Connection lost",
        reconnecting: "Reconnecting...",
        createRoomFailed: "Create room failed",
        joinRoomFailed: "Join room failed"
      },
      success: {
        gameStarted: "Game started",
        connectionRestored: "Connection restored",
        roomCreated: "Room created",
        joinedRoom: "Joined room",
        leftRoom: "Left room"
      },
      chat: {
        title: "Chat",
        noMessages: "No messages",
        disabled: "Chat disabled",
        placeholder: "Type message..."
      },
      enterRoomCode: "Enter room code",
      roomCodeHint: "6-digit room code",
      password: "Password",
      enterPassword: "Enter password",
      passwordRequired: "Password required",
      game: {
        gameOver: "Game Over",
        finalResults: "Final Results"
      },
      yourResult: "Your Result",
      totalQuestions: "Total Questions",
      totalTime: "Total Time",
      playAgain: "Play Again",
      backToLobby: "Back to Lobby",
      subtitle: "Play with friends",
      roomName: "Room Name",
      enterRoomName: "Enter room name",
      maxPlayers: "Max Players",
      timeLimit: "Time Limit",
      roomSettings: "Room Settings",
      showLeaderboard: "Show Leaderboard",
      private: "Private"
    },

    // Game Mode
    gameMode: {
      singlePlayer: "Single Player",
      singlePlayerDesc: "Play alone",
      noPressure: "No Pressure",
      trackProgress: "Track Progress",
      customizable: "Customizable",
      startSolo: "Start Solo",
      multiplayer: "Multiplayer",
      multiplayerDesc: "Play with friends",
      createRoom: "Create Room",
      createRoomDesc: "Create private room",
      becomeHost: "Become Host",
      invitePlayers: "Invite Players",
      customizeSettings: "Customize Settings"
    },

    // Profile
    profile: {
      viewAllCount: "View All",
      passwordMinLength: "Password min 6 characters",
      displayName: "Display Name"
    },

    // Dashboard
    dashboard: {
      welcome: "Welcome"
    },

    // Not Found
    notFound: {
      title: "Page Not Found",
      description: "The page you're looking for doesn't exist",
      backToHome: "Back to Home"
    },

    // Unauthorized
    unauthorized: {
      title: "Unauthorized",
      description: "You don't have permission to access this page",
      goHome: "Go Home"
    },

    // Landing
    landing: {
      features: {
        diversity: {
          title: "Diverse Topics",
          description: "Thousands of quizzes from various fields"
        },
        realtime: {
          description: "Real-time result updates"
        },
        ranking: {
          description: "Global leaderboard"
        }
      }
    },

    // Leaderboard
    leaderboard: {
      viewAllCount: "View All"
    },

    // Status
    status: {
      label: "Status"
    },

    // Nav
    nav: {
      quiz: "Quiz"
    },

    // Achievement
    achievement: {
      unlockedAt: "Unlocked at",
      unlocked: "Unlocked"
    },

    // Errors
    errors: {
      unauthorized: "Unauthorized"
    },

    // UI
    ui: {
      role: "Role"
    },

    // Action
    action: {
      actions: "Actions",
      action: "Action"
    },

    // Users
    users: {
      confirmDelete: "Confirm delete user?"
    }
  }
};

console.log('üîß Adding ALL missing translations...\n');

// Load current translations
const viPath = path.join(LOCALES_DIR, 'vi', 'common.json');
const enPath = path.join(LOCALES_DIR, 'en', 'common.json');

let viData = JSON.parse(fs.readFileSync(viPath, 'utf8'));
let enData = JSON.parse(fs.readFileSync(enPath, 'utf8'));

// Deep merge function with conflict resolution
function deepMerge(target, source) {
  for (const key in source) {
    if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {
      // If target[key] exists but is not an object, override it
      if (!target[key] || typeof target[key] !== 'object' || Array.isArray(target[key])) {
        target[key] = {};
      }
      deepMerge(target[key], source[key]);
    } else {
      // Only set if key doesn't exist
      if (!target[key]) {
        target[key] = source[key];
      }
    }
  }
  return target;
}

// Merge all translations
viData = deepMerge(viData, allTranslations.vi);
enData = deepMerge(enData, allTranslations.en);

// Write back
fs.writeFileSync(viPath, JSON.stringify(viData, null, 2) + '\n', 'utf8');
fs.writeFileSync(enPath, JSON.stringify(enData, null, 2) + '\n', 'utf8');

console.log('‚úÖ All missing translations added!\n');
console.log('üìä Summary:');
console.log('   - Added translations for: common, auth, quiz, categories,');
console.log('     multiplayer, profile, dashboard, notFound, unauthorized,');
console.log('     landing, leaderboard, status, nav, achievement, etc.\n');
console.log('üîÑ Run npm run i18n:validate to check\n');
