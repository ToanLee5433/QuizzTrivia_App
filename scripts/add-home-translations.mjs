import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const projectRoot = path.resolve(__dirname, '..');
const viPath = path.join(projectRoot, 'public/locales/vi/common.json');
const enPath = path.join(projectRoot, 'public/locales/en/common.json');

// New translations to add
const newTranslations = {
  vi: {
    "home": {
      "hero": {
        "welcome": "Ch√†o m·ª´ng tr·ªü l·∫°i, {{name}}!",
        "subtitle": "S·∫µn s√†ng th·ª≠ th√°ch ki·∫øn th·ª©c c·ªßa b·∫°n ch∆∞a?",
        "description": "Kh√°m ph√° h√†ng ngh√¨n quiz th√∫ v·ªã, th·ª≠ th√°ch b·∫£n th√¢n v√† leo l√™n b·∫£ng x·∫øp h·∫°ng! üöÄ"
      },
      "stats": {
        "realData": "üìà D·ªØ li·ªáu th·ª±c t·∫ø",
        "registered": "üë• ƒê√£ ƒëƒÉng k√Ω",
        "pending": "‚úÖ Ch·ªù c·∫≠p nh·∫≠t",
        "creatorsAndAdmins": "‚ú® Creator + Admin"
      },
      "trending": {
        "title": "Quiz Trending",
        "subtitle": "Nh·ªØng quiz ƒë∆∞·ª£c y√™u th√≠ch nh·∫•t",
        "viewAll": "Xem t·∫•t c·∫£",
        "noQuizzes": "Ch∆∞a c√≥ quiz trending",
        "createFirst": "H√£y b·∫Øt ƒë·∫ßu t·∫°o quiz ƒë·∫ßu ti√™n c·ªßa b·∫°n!",
        "createNow": "T·∫°o Quiz ngay"
      },
      "quickActions": {
        "title": "H√†nh ƒë·ªông nhanh",
        "subtitle": "Nh·ªØng thao t√°c th∆∞·ªùng d√πng ƒë·ªÉ b·∫Øt ƒë·∫ßu",
        "createDescription": "Thi·∫øt k·∫ø v√† chia s·∫ª quiz c·ªßa ri√™ng b·∫°n v·ªõi m·ªçi ng∆∞·ªùi",
        "startCreating": "B·∫Øt ƒë·∫ßu t·∫°o",
        "randomQuiz": "Quiz ng·∫´u nhi√™n",
        "randomDescription": "Nh·∫£y v√†o m·ªôt quiz b·∫•t k·ª≥ v√† th·ª≠ th√°ch ki·∫øn th·ª©c c·ªßa b·∫°n",
        "playNow": "Ch∆°i ngay",
        "viewProgress": "Xem ti·∫øn ƒë·ªô",
        "progressDescription": "Ki·ªÉm tra th√†nh t√≠ch v√† l·ªãch s·ª≠ l√†m quiz c·ªßa b·∫°n"
      },
      "popular": {
        "title": "Quiz ph·ªï bi·∫øn",
        "subtitle": "Nh·ªØng quiz ƒë∆∞·ª£c y√™u th√≠ch nh·∫•t tu·∫ßn n√†y"
      }
    }
  },
  en: {
    "home": {
      "hero": {
        "welcome": "Welcome back, {{name}}!",
        "subtitle": "Ready to challenge your knowledge?",
        "description": "Explore thousands of exciting quizzes, challenge yourself and climb the leaderboard! üöÄ"
      },
      "stats": {
        "realData": "üìà Real data",
        "registered": "üë• Registered",
        "pending": "‚úÖ Pending update",
        "creatorsAndAdmins": "‚ú® Creators + Admins"
      },
      "trending": {
        "title": "Trending Quizzes",
        "subtitle": "Most loved quizzes",
        "viewAll": "View all",
        "noQuizzes": "No trending quizzes yet",
        "createFirst": "Start creating your first quiz!",
        "createNow": "Create Quiz Now"
      },
      "quickActions": {
        "title": "Quick Actions",
        "subtitle": "Common actions to get started",
        "createDescription": "Design and share your own quiz with everyone",
        "startCreating": "Start creating",
        "randomQuiz": "Random Quiz",
        "randomDescription": "Jump into any quiz and challenge your knowledge",
        "playNow": "Play now",
        "viewProgress": "View Progress",
        "progressDescription": "Check your achievements and quiz history"
      },
      "popular": {
        "title": "Popular Quizzes",
        "subtitle": "Most loved quizzes this week"
      }
    }
  }
};

function addTranslations() {
  try {
    // Read Vietnamese file
    const viContent = JSON.parse(fs.readFileSync(viPath, 'utf-8'));
    
    // Read English file
    const enContent = JSON.parse(fs.readFileSync(enPath, 'utf-8'));
    
    // Merge with new translations
    const updatedVi = { ...viContent, ...newTranslations.vi };
    const updatedEn = { ...enContent, ...newTranslations.en };
    
    // Sort keys alphabetically
    const sortedVi = Object.keys(updatedVi).sort().reduce((acc, key) => {
      acc[key] = updatedVi[key];
      return acc;
    }, {});
    
    const sortedEn = Object.keys(updatedEn).sort().reduce((acc, key) => {
      acc[key] = updatedEn[key];
      return acc;
    }, {});
    
    // Write back to files
    fs.writeFileSync(viPath, JSON.stringify(sortedVi, null, 2), 'utf-8');
    fs.writeFileSync(enPath, JSON.stringify(sortedEn, null, 2), 'utf-8');
    
    console.log('‚úÖ Successfully added home page translations!');
    console.log(`   - Vietnamese: ${Object.keys(newTranslations.vi.home).length} sections added`);
    console.log(`   - English: ${Object.keys(newTranslations.en.home).length} sections added`);
    
  } catch (error) {
    console.error('‚ùå Error adding translations:', error);
    process.exit(1);
  }
}

addTranslations();
